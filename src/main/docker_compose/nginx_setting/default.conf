server {
    listen       80;
    listen  [::]:80;
    server_name  localhost; # (▲)這邊的字串會影響到後面

    #access_log  /var/log/nginx/host.access.log  main;

#    location / {
#        root   /usr/share/nginx/html;
#        index  index.html index.htm;
#    }

    # 來自 http://localhost:7795/RogerApp 的請求符合該配置的規則，所以採用該配置
    # 成功範例：http://localhost:7795/RogerApp/HelloWorld
    # (▲) localhost:7795 → 這邊的 "localhost" 是對應到 server_name 設定
    location ^~ /RogerApp {
        # 反向代理 : 轉導
        # proxy_pass http://my-springboot-h2:8080/app;
        proxy_pass http://my-springboot-h2:8080/RogerReverseProxyTest;
        proxy_read_timeout 300;
        proxy_connect_timeout 300;
        client_max_body_size 10m;

        # 把 IP、Protocol 等 header 都一起送給反向代理的 server
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
    }

#    location / {
#        proxy_pass http://my-springboot-h2:8080/;
#        proxy_read_timeout 300;
#        proxy_connect_timeout 300;
#        client_max_body_size 10m;
#    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

