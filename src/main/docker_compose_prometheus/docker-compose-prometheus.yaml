############################################################################
# command：
#    $ docker-compose -f docker-compose-prometheus.yaml up -d
#
# 【Prometheus】http://localhost:9090/
# 【Prometheus Targets 查看 job】http://172.20.10.2:9090/targets
# 【node-exporter】http://localhost:9100/
#
############################################################################
version: "3.8"
name: roger-prometheus-compose # 可自訂 docker-compose 的名稱
services:
  prometheus_app:
    image: prom/prometheus:latest
    container_name: my-prometheus
    platform: linux/amd64
    restart: no
    ports:
      - "9090:9090"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./prometheus_settings/prometheus.yml:/etc/prometheus/prometheus.yml  # Prometheus 主要配置文件
      - ./prometheus_settings/rules/:/etc/prometheus/rules/ # 告警規則
      - ./prometheus-job/:/usr/local/prometheus/groups/prometheus-job/ # 若為 Linux 環境下，可以把 . 改為 $PWD
      - ./node-exporter-job/:/usr/local/prometheus/groups/node-exporter-job/
      - ./spring-application-job:/usr/local/prometheus/groups/spring-application-job/
  node-exporter_app:
    image: prom/node-exporter:latest
    container_name: my-node-exporter
    platform: linux/amd64
    restart: no
    ports:
      - "9100:9100"
    volumes:
      - /etc/localtime:/etc/localtime:ro
  grafana:
    image: grafana/grafana
    container_name: my-grafana
    platform: linux/amd64
    restart: no
    ports:
      - "3000:3000"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - prometheus_app
